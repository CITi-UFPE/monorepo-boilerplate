version: "3"
services:
  app:
      platform: "linux/amd64"
      build:
        context: .
        dockerfile: dev.Dockerfile
      working_dir: /app
      ports:
        - "3000:3000"
      image: t3-app
      env_file: .env
      volumes:
        - .:/app
        - node_modules:/app/node_modules
  db:
    image: postgres:16
    container_name: ${PROJECT_NAME}-db
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_DB}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  # test-db:
  #   image: postgres
  #   container_name: ${PROJECT_NAME}-test-db
  #   env_file: .env
  #   environment:
  #     - POSTGRES_USER=${DATABASE_TEST_USER}
  #     - POSTGRES_PASSWORD=${DATABASE_TEST_PASSWORD}
  #     - POSTGRES_DB=${DATABASE_TEST_DB}
  #   ports:
  #     - "${DATABASE_TEST_PORT}:5432"

volumes:
  node_modules:
  pgdata:

    # Documentação usada para a construção desse arquivo
    # https://www.digitalocean.com/community/tutorials/containerizing-a-node-js-application-for-development-with-docker-compose-pt
    # (principalmente o passo 4)